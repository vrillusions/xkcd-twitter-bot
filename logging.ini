[loggers]
#keys=root,main
keys=root

[handlers]
keys=consoleHandler,fileHandler

[formatters]
keys=simpleFormatter,jsonFormatter

[logger_root]
# If this is NOTSET then logger.getLogger().setLevel() will have no effect
level=NOTSET
handlers=consoleHandler,fileHandler

# Little confusing but the handlers on this should be blank because it will use
# the root logger handlers. So this is mainly just if you want to set different
# log levels on logger
#[logger_main]
#level=NOTSET
#handlers=
#propogate=0
#qualname=main

[handler_consoleHandler]
class=StreamHandler
level=WARN
formatter=simpleFormatter
args=(sys.stderr,)

[handler_fileHandler]
class=handlers.TimedRotatingFileHandler
level=INFO
#formatter=jsonFormatter
formatter=simpleFormatter
args=('xkcd-twitter-bot.log', 'midnight', 1, 5)

[formatter_simpleFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
datefmt=

[formatter_jsonFormatter]
# Emulates a json-like string which is easier to parse. Field names (mainly
# the use of '@timestamp') is to emulate logstash.
# BUG: does not escape "s
# Should probably just create a formatter class so I can json.dumps()
format={"@timestamp":"%(asctime)s","logger":"%(name)s","level":"%(levelname)s","message":"%(message)s"},
datefmt=
